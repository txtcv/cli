name: Release

on:
  push:
    branches:
      - "stable"

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Extract version
        id: extract_version
        run: |
          version $(cargo metadata --foramt-version 1 --no-deps | jq ".packages[0].version")
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: txtcv ${{ github.ref_name }}
          target_commitish: ${{ github.sha }}
          draft: false
          prerelease: false

  build-and-upload:
    name: Build and Upload for ${{ matrix.os }}
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux
          - os: macos-latest
            target: macos
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build binary
        run: cargo build --release --all-features

      - name: Package artifact
        run: |
          artifact_name=txtcv-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.tar.gz
          tar -C target/release -czf "$artifact_name" txtcv.tar.gz

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./txtcv-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.tar.gz
          asset_name: txtcv-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip
